import clamd
import logging
import argparse
from logging.handlers import RotatingFileHandler
import pyfiglet

def configure_logging():
    logger = logging.getLogger('scanner')
    logger.setLevel(logging.INFO)
    
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    
    file_handler = RotatingFileHandler('scan.log', maxBytes=1024, backupCount=5)
    file_handler.setFormatter(formatter)
    logger.addHandler(file_handler)

    return logger

def scan_file(filename, logger):
    try:
        clam = clamd.ClamdUnixSocket()
        scan_result = clam.scan(filename)
        
        if scan_result and 'FOUND' in scan_result.values():
            logger.warning(f"{filename} is infected with malware: {scan_result['stream']}")
            print(f"{filename} is infected with malware: {scan_result['stream']}")
        else:
            logger.info(f"{filename} is clean")
            print(f"{filename} is clean")
    except clamd.ConnectionError as e:
        logger.error(f"Failed to connect to ClamAV daemon: {e}")
        print(f"Failed to connect to ClamAV daemon: {e}")
    except FileNotFoundError as e:
        logger.error(f"File not found: {e}")
        print(f"File not found: {e}")
    except Exception as e:
        logger.error(f"An error occurred: {e}")
        print(f"An error occurred: {e}")

def main():
    parser = argparse.ArgumentParser(description='File scanning using ClamAV')
    parser.add_argument('filename', help='File to scan')
    args = parser.parse_args()

    logger = configure_logging()
    scan_file(args.filename, logger)

if __name__ == '__main__':
    print(pyfiglet.figlet_format("MALWARE SCANNER"))
    main()
