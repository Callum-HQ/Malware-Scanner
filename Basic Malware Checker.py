import clamd
import logging
import argparse
from logging.handlers import RotatingFileHandler

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)
file_handler = RotatingFileHandler('scan.log', maxBytes=1024, backupCount=5)
logger.addHandler(file_handler)

def scan_file(filename):
    try:
        clam = clamd.ClamdUnixSocket()
        scan_result = clam.scan(filename)
        if scan_result and scan_result['stream'] == 'FOUND':
            logger.warning(f"{filename} is infected with malware: {scan_result['stream']}")
            print(f"{filename} is infected with malware: {scan_result['stream']}")
        else:
            logger.info(f"{filename} is clean")
            print(f"{filename} is clean")
    except clamd.ConnectionError as e:
        logger.error(f"Failed to connect to ClamAV daemon: {e}")
        print(f"Failed to connect to ClamAV daemon: {e}")
    except clamd.ScanError as e:
        logger.error(f"Failed to scan file: {e}")
        print(f"Failed to scan file: {e}")
    except FileNotFoundError as e:
        logger.error(f"File not found: {e}")
        print(f"File not found: {e}")
    except Exception as e:
        logger.error(f"An error occurred: {e}")
        print(f"An error occurred: {e}")

def main():
    parser = argparse.ArgumentParser(description='File scanning using ClamAV')
    parser.add_argument('filename', help='File to scan')
    args = parser.parse_args()
    scan_file(args.filename)

if __name__ == '__main__':
    main()
